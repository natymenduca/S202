SELECT apellido1, apellido2, nombre FROM persona ORDER BY apellido1, apellido2, nombre;# Lista el 1er apellido, 2do apellido y el nombre de todos los/las alumnos  alfabéticamente de < a > por el 1er apellido, 2do apellido y nombre
SELECT nombre, apellido1, apellido2 FROM persona WHERE telefono IS NULL;#Lista el nom y los 2 apellidos de los alum que no han dado de alta su n de tel en la base de datos
SELECT * FROM persona WHERE YEAR(fecha_nacimiento) = 1983;#Retornar el listado de los alumnos que nacieron en 1983
SELECT p.nombre, p.apellido1, p.apellido2 FROM persona p LEFT JOIN profesor pr ON p.id = pr.id_profesor WHERE pr.id_profesor IS NULL AND p.telefono IS NULL AND p.nif LIKE '%D';# Retornar el listado de profes que no han dado de alta su n de tel en la base de datos y además su NIF acaba en D
SELECT * FROM  asignatura WHERE Trimestre = 1 AND Curso = 2 AND id_grado = 9; # Retornar el listado de las asignaturas que se imparten en el 1er trimestre, en el 2do curso del grado que tiene el identificador 9
SELECT p.apellido1, p.apellido2, p.nombre, d.nombre AS NombreDepartamento FROM profesor JOIN persona p ON profesor.id_profesor = p.id JOIN departamento d ON profesor.id_departamento = d.id ORDER BY p.apellido1, p.apellido2, p.nombre;
#Retornar un listado con el nombre de las asignaturas, año de inicio y año de fin del curso escolar del alumno/a con NIF 48375418D
SELECT a.nombre AS NombreAsignatura, ce.anyo_inicio AS AnyoInicio, ce.anyo_fin AS AnyoFin FROM persona P JOIN alumno_se_matricula_asignatura m ON p.id = m.id_alumno JOIN curso_escolar ce ON m.id_curso_escolar = ce.id JOIN asignatura a ON m.id_asignatura = a.id WHERE p.nif = '48375418D';
#Retornar un listado con el nombre de todos los departamentos que tienen profesores/se que imparten alguna asignatura en el Grado en Ingeniería Informática 
SELECT DISTINCT d.nombre FROM departamento d JOIN profesor p ON d.id = p.id_departamento JOIN asignatura a ON p.id_profesor = a.id_profesor JOIN grado g ON a.id_grado = g.id WHERE g.nombre = 'Grado en Trabajo Social' AND d.id IN (SELECT DISTINCT id_departamento FROM profesor);
#Retornar un listado con todos los alumnos que se han matriculado en alguna asignatura durante el curso escolar 2004/2008
SELECT DISTINCT p.nombre, p.apellido1, p.apellido2 FROM persona p JOIN alumno_se_matricula_asignatura m ON p.id = m.id_alumno JOIN curso_escolar ce ON m.id_curso_escolar = ce.id WHERE ce.anyo_inicio = 2004 AND ce.anyo_fin = 2008;
#lista el nombre del depto, el 1er apellido, el 2do apellido y el nombre del prof de la tabla "profesores" y la tabla "departamentos". Para relacionar las dos tablas, usamos la cláusula LEFT JOIN con la condición de unión de la cláusula ON y ORDER BY para ordenar el resultado: nom del depto, 1er apellido, 2do apellido y nom del prof.
SELECT d.nombre AS nombre_departamento, p.apellido1, p.apellido2, p.nombre FROM profesor pr LEFT JOIN departamento d ON pr.id_departamento = d.id LEFT JOIN persona p ON pr.id_profesor = p.id ORDER BY nombre_departamento, p.apellido1, p.apellido2, p.nombre;
#lista los campos del 1er apellido, el 2do apellido y el nom del profe de la tabla "profesores" usamos LEFT JOIN para unir la tabla "profes" con la tabla "deptos" , con WHERE filtrar los registros donde el ID del depto sea NULL no hay una asociación con ningún depto
SELECT * FROM profesor LEFT JOIN departamento ON profesor.id_departamento = departamento.id WHERE departamento.id IS NULL;# esplicacion arriba
SELECT * FROM departamento LEFT JOIN profesor ON departamento.id = profesor.id_departamento WHERE profesor.id_departamento IS NULL;#Lista el campo del nom del depto de la tabla "deptos", LEFT JOIN une la tabla "deptos" con la tabla "profes",WHERE filtrar los registros donde el ID del profesor sea NULL no hay una asociación con ningún profesor
SELECT * FROM profesor LEFT JOIN asignatura ON profesor.id_profesor = asignatura.id_profesor WHERE asignatura.id_profesor IS NULL;#lista los campos del 1er apellido, el 2do apellido y el nom del profe de la tabla "profes" LEFT JOIN une la tabla "profes" con la tabla "asignat" y WHERE filtrar los registros donde el ID de la asign sea NULL, el profesor no imparte ninguna asignatura.
SELECT * FROM asignatura LEFT JOIN profesor ON asignatura.id_profesor = profesor.id_profesor WHERE profesor.id_profesor IS NULL;#el campo del nombre de la asig de la tabla "asignaturas"LEFT JOIN une la tabla "asigts" con la tabla "profes" WHERE para filtrar los registros donde el ID del profe sea NULL,no hay ningún profe asignado a la asignatura.
#Retorna un listado con todos los departamentos que no han impartido asignaturas en ningún curso escolar
SELECT * FROM departamento LEFT JOIN profesor ON departamento.id = profesor.id_departamento LEFT JOIN asignatura ON profesor.id_profesor = asignatura.id_profesor WHERE asignatura.id_profesor IS NULL;
SELECT COUNT(*) AS total_alumnos FROM persona WHERE tipo = 'alumno';# Retorna el número total de alumnos que hay
SELECT COUNT(*) AS alumnos_1983 FROM persona WHERE tipo = 'alumno' AND YEAR(fecha_nacimiento) = 1983;# Calcula cuántos alumnos nacieron en 1983
#Calcula cuántos profes hay en cada depto. El resultado solo tiene que mostrar dos columnas, una con el nom del depto y otra con el num de profes que hay en este depto. El resultado solo tiene que incluir los deptos que tienen profes asociados y tendrá que estar ordenado de > a < por el num de profes
SELECT d.nombre AS departamento, COUNT(p.id) AS cantidad_profesores FROM departamento d INNER JOIN profesor pr ON d.id = pr.id_departamento INNER JOIN persona p ON pr.id_profesor = p.id GROUP BY d.nombre ORDER BY cantidad_profesores DESC;#
#Retorna un listado con todos los departamentos y el número de profesores/se que hay en cada uno de ellos. Tenga en cuenta que pueden existir departamentos que no tienen profesores/se asociados. Estos departamentos también tienen que aparecer en el listado
SELECT d.nombre AS departamento, COUNT(p.id) AS cantidad_profesores FROM departamento d LEFT JOIN profesor pr ON d.id = pr.id_departamento LEFT JOIN persona p ON pr.id_profesor = p.id GROUP BY d.nombre ORDER BY cantidad_profesores DESC;
#Retorna un listado con el nombre de todos los grados existentes en la base de datos y el número de asignaturas que tiene cada uno. Ten en cuenta que pueden existir grados que no tienen asignaturas asociadas. Estos grados también tienen que aparecer en el listado. El resultado tendrá que estar ordenado de > a < por el num de asignaturas
SELECT g.nombre AS grado, COUNT(a.id) AS cantidad_asignaturas FROM grado g LEFT JOIN asignatura a ON g.id = a.id_grado GROUP BY g.nombre ORDER BY cantidad_asignaturas DESC;
#Retorna un listado con el nombre de todos los grados existentes en la base de datos y el número de asignaturas que tiene cada uno, de los grados que tengan más de 40 asignaturas asociadas
SELECT g.nombre AS grado, COUNT(a.id) AS cantidad_asignaturas FROM grado g LEFT JOIN asignatura a ON g.id = a.id_grado GROUP BY g.nombre HAVING cantidad_asignaturas > 40 ORDER BY cantidad_asignaturas DESC;
#Retorna un listado con el nom de todos los grados existentes en la base de datos y el num de asignat que tiene cada uno, de los grados que tengan más de 40 asignaturas asociadas,GROUP BY agrupa las asignaturas por su tipo, la función SUM para calcular la suma de créditos para cada tipo de asignatura
SELECT g.nombre AS grado, a.tipo, SUM(a.creditos) AS suma_creditos FROM grado g LEFT JOIN asignatura a ON g.id = a.id_grado GROUP BY g.nombre, a.tipo;
#Retorna un listado que muestre cuántos alum se han matriculado de alguna asignatura en cada uno de los cursos escolares,GROUP BY para agrupar las matrículas por el año académico,la función COUNT para contar el num de alum en cada grupo Une las tablas necesarias para obtener el año académico y las matrículas de los alumnos
SELECT ce.anyo_inicio, COUNT(ama.id_alumno) AS cantidad_alumnos FROM curso_escolar ce LEFT JOIN alumno_se_matricula_asignatura ama ON ce.id = ama.id_curso_escolar GROUP BY ce.anyo_inicio;
#Retorna un listado con el nUM de asignat que imparte cada profe, incluyendo aquellos que no imparten ninguna asignatura,la cláusula LEFT JOIN incluye a todos los profes, incluso aquellos que no tienen asignaturas.COUNT para contar el número de asignaturas impartidas por cada profesor/a.
SELECT p.id, p.nombre, p.apellido1, p.apellido2, COUNT(a.id) AS cantidad_asignaturas FROM persona p LEFT JOIN profesor pr ON p.id = pr.id_profesor LEFT JOIN asignatura a ON pr.id_profesor = a.id_profesor GROUP BY p.id, p.nombre, p.apellido1, p.apellido2 ORDER BY cantidad_asignaturas DESC;
#Retorna todos los datos del alumno/a más joven,usa la función MIN para encontrar la fecha de nacimiento mínima entre todos los alumnos Une las tabl.as necesarias para obtener todos los datos del alumno/a más joven.
SELECT * FROM persona WHERE tipo = 'alumno' ORDER BY fecha_nacimiento ASC LIMIT 1;
#Retorna un listado con los profes que tienen un depto asociado y que no imparten ninguna asignat, usa LEFT JOIN para incluir a todos los profes, incluso aquellos que no tienen asignaturas, WHERE para filtrar los profes que tienen asignaturas asociadas,Une las tablas necesarias para obtener los profes y sus deptos asociados.
SELECT p.id, p.nombre, p.apellido1, p.apellido2 FROM persona p INNER JOIN profesor pr ON p.id = pr.id_profesor LEFT JOIN asignatura a ON pr.id_profesor = a.id_profesor WHERE a.id IS NULL;
